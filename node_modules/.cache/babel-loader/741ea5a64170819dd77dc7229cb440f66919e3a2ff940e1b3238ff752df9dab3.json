{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prach\\\\Desktop\\\\comapnyasg\\\\UNIBLOX\\\\unibloxapp\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Cart from './components/Cart';\nimport Checkout from './components/Checkout';\nimport Admin from './components/Admin';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [cartItems, setCartItems] = useState([]);\n  const [discountCodes, setDiscountCodes] = useState([]);\n  const [purchaseInfo, setPurchaseInfo] = useState({\n    itemsCount: 0,\n    totalPurchaseAmount: 0,\n    discountCodes: [],\n    totalDiscountAmount: 0\n  });\n  const addItemToCart = item => {\n    setCartItems([...cartItems, item]);\n  };\n  const applyDiscountCode = code => {\n    // Simulate a valid discount code\n    const validDiscountCode = 'DISCOUNT10';\n    if (code === validDiscountCode) {\n      // Calculate the discount amount (you can adjust this logic)\n      const discountAmount = calculateDiscount(cartItems);\n\n      // Update purchaseInfo with discount details\n      setPurchaseInfo({\n        ...purchaseInfo,\n        discountCodes: [...purchaseInfo.discountCodes, code],\n        totalDiscountAmount: purchaseInfo.totalDiscountAmount + discountAmount\n      });\n    } else {\n      alert('Invalid discount code');\n    }\n  };\n  const generateDiscountCode = () => {\n    // Simulate generating a new discount code (you can adjust this logic)\n    const newDiscountCode = generateRandomDiscountCode();\n\n    // Add the generated code to discountCodes state\n    setDiscountCodes([...discountCodes, newDiscountCode]);\n  };\n\n  // Implement the discount calculation logic based on the cart items\n  const calculateDiscount = cartItems => {\n    // Add your discount calculation logic here\n    // For example, calculate the total price of items in the cart and apply a percentage discount.\n    return 0; // Placeholder for the discount amount\n  };\n\n  // Implement the discount code generation logic\n  const generateRandomDiscountCode = () => {\n    // Add your logic to generate a random discount code here\n    // For example, you can generate a random alphanumeric code.\n    return 'NEWCODE123'; // Placeholder for the generated code\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Cart, {\n      cartItems: cartItems,\n      addItemToCart: addItemToCart\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Checkout, {\n      cartItems: cartItems,\n      applyDiscountCode: applyDiscountCode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Admin, {\n      generateDiscountCode: generateDiscountCode,\n      purchaseInfo: purchaseInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"6jVQic15Cz2ZNyL7tMLlArZxvjI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Cart","Checkout","Admin","jsxDEV","_jsxDEV","App","_s","cartItems","setCartItems","discountCodes","setDiscountCodes","purchaseInfo","setPurchaseInfo","itemsCount","totalPurchaseAmount","totalDiscountAmount","addItemToCart","item","applyDiscountCode","code","validDiscountCode","discountAmount","calculateDiscount","alert","generateDiscountCode","newDiscountCode","generateRandomDiscountCode","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/prach/Desktop/comapnyasg/UNIBLOX/unibloxapp/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Cart from './components/Cart';\nimport Checkout from './components/Checkout';\nimport Admin from './components/Admin';\n\nfunction App() {\n  const [cartItems, setCartItems] = useState([]);\n  const [discountCodes, setDiscountCodes] = useState([]);\n  const [purchaseInfo, setPurchaseInfo] = useState({\n    itemsCount: 0,\n    totalPurchaseAmount: 0,\n    discountCodes: [],\n    totalDiscountAmount: 0,\n  });\n\n  const addItemToCart = (item) => {\n    setCartItems([...cartItems, item]);\n  };\n\n  const applyDiscountCode = (code) => {\n    // Simulate a valid discount code\n    const validDiscountCode = 'DISCOUNT10';\n\n    if (code === validDiscountCode) {\n      // Calculate the discount amount (you can adjust this logic)\n      const discountAmount = calculateDiscount(cartItems);\n\n      // Update purchaseInfo with discount details\n      setPurchaseInfo({\n        ...purchaseInfo,\n        discountCodes: [...purchaseInfo.discountCodes, code],\n        totalDiscountAmount: purchaseInfo.totalDiscountAmount + discountAmount,\n      });\n    } else {\n      alert('Invalid discount code');\n    }\n  };\n\n  const generateDiscountCode = () => {\n    // Simulate generating a new discount code (you can adjust this logic)\n    const newDiscountCode = generateRandomDiscountCode();\n\n    // Add the generated code to discountCodes state\n    setDiscountCodes([...discountCodes, newDiscountCode]);\n  };\n\n  // Implement the discount calculation logic based on the cart items\n  const calculateDiscount = (cartItems) => {\n    // Add your discount calculation logic here\n    // For example, calculate the total price of items in the cart and apply a percentage discount.\n    return 0; // Placeholder for the discount amount\n  };\n\n  // Implement the discount code generation logic\n  const generateRandomDiscountCode = () => {\n    // Add your logic to generate a random discount code here\n    // For example, you can generate a random alphanumeric code.\n    return 'NEWCODE123'; // Placeholder for the generated code\n  };\n\n  return (\n    <div>\n      <Cart cartItems={cartItems} addItemToCart={addItemToCart} />\n      <Checkout cartItems={cartItems} applyDiscountCode={applyDiscountCode} />\n      <Admin generateDiscountCode={generateDiscountCode} purchaseInfo={purchaseInfo} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,KAAK,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACU,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC;IAC/Cc,UAAU,EAAE,CAAC;IACbC,mBAAmB,EAAE,CAAC;IACtBL,aAAa,EAAE,EAAE;IACjBM,mBAAmB,EAAE;EACvB,CAAC,CAAC;EAEF,MAAMC,aAAa,GAAIC,IAAI,IAAK;IAC9BT,YAAY,CAAC,CAAC,GAAGD,SAAS,EAAEU,IAAI,CAAC,CAAC;EACpC,CAAC;EAED,MAAMC,iBAAiB,GAAIC,IAAI,IAAK;IAClC;IACA,MAAMC,iBAAiB,GAAG,YAAY;IAEtC,IAAID,IAAI,KAAKC,iBAAiB,EAAE;MAC9B;MACA,MAAMC,cAAc,GAAGC,iBAAiB,CAACf,SAAS,CAAC;;MAEnD;MACAK,eAAe,CAAC;QACd,GAAGD,YAAY;QACfF,aAAa,EAAE,CAAC,GAAGE,YAAY,CAACF,aAAa,EAAEU,IAAI,CAAC;QACpDJ,mBAAmB,EAAEJ,YAAY,CAACI,mBAAmB,GAAGM;MAC1D,CAAC,CAAC;IACJ,CAAC,MAAM;MACLE,KAAK,CAAC,uBAAuB,CAAC;IAChC;EACF,CAAC;EAED,MAAMC,oBAAoB,GAAGA,CAAA,KAAM;IACjC;IACA,MAAMC,eAAe,GAAGC,0BAA0B,CAAC,CAAC;;IAEpD;IACAhB,gBAAgB,CAAC,CAAC,GAAGD,aAAa,EAAEgB,eAAe,CAAC,CAAC;EACvD,CAAC;;EAED;EACA,MAAMH,iBAAiB,GAAIf,SAAS,IAAK;IACvC;IACA;IACA,OAAO,CAAC,CAAC,CAAC;EACZ,CAAC;;EAED;EACA,MAAMmB,0BAA0B,GAAGA,CAAA,KAAM;IACvC;IACA;IACA,OAAO,YAAY,CAAC,CAAC;EACvB,CAAC;;EAED,oBACEtB,OAAA;IAAAuB,QAAA,gBACEvB,OAAA,CAACJ,IAAI;MAACO,SAAS,EAAEA,SAAU;MAACS,aAAa,EAAEA;IAAc;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC5D3B,OAAA,CAACH,QAAQ;MAACM,SAAS,EAAEA,SAAU;MAACW,iBAAiB,EAAEA;IAAkB;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACxE3B,OAAA,CAACF,KAAK;MAACsB,oBAAoB,EAAEA,oBAAqB;MAACb,YAAY,EAAEA;IAAa;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9E,CAAC;AAEV;AAACzB,EAAA,CA9DQD,GAAG;AAAA2B,EAAA,GAAH3B,GAAG;AAgEZ,eAAeA,GAAG;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}